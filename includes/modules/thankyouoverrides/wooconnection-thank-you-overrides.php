<?php
	//Wordpress hook : This action is triggered after the sucessfull order to redirect user to custom override link...
	add_action( 'template_redirect', 'set_redirect_depending_on_override' );
	//Function Definition : set_redirect_depending_on_override
 	function set_redirect_depending_on_override(){
	 	//if the current page is the order received and if there's an order key
		if( isset( $_GET['key'] ) && is_wc_endpoint_url( 'order-received' ) ) { 
		    $order_id = wc_get_order_id_by_order_key( $_GET['key'] );//Get the order id by order key......
		 	$relatedProductsArray = array();//define empty array...
			$relatedCatArray = array();//define empty array...
			//check order id is not empty.......
			if (!empty($order_id)) {
		      	$order = wc_get_order($order_id);//get order details by order id......
				$order_data = $order->get_data();//get order data.....
			  	$contactPassInformation = getContactInformationFromOrder($order_data,$order);//get the contact information from order information..... 
				global $wpdb,$table_prefix;
			  	//override main table...
			    $override_table_name = 'wooconnection_thankyou_overrides';//table name
			    $wp_thankyou_override_table_name = $table_prefix . "$override_table_name";

			    //get the product thankyou overrides..... 
				$thankyouProductOverrides = $wpdb->get_results("SELECT * FROM ".$wp_thankyou_override_table_name." WHERE wc_override_status=".STATUS_ACTIVE." and wc_override_redirect_condition=".REDIRECT_CONDITION_CART_SPECIFIC_PRODUCTS." ORDER BY wc_override_sort_order ASC");

				//get the product category thankyou overrides.....
				$thankyouProductCategoryOverrides = $wpdb->get_results("SELECT * FROM ".$wp_thankyou_override_table_name." WHERE wc_override_status=".STATUS_ACTIVE." and wc_override_redirect_condition=".REDIRECT_CONDITION_CART_SPECIFIC_CATEGORIES." ORDER BY wc_override_sort_order ASC");

				//First check the product based thanks overrride exist or not if exist then proceed to match the rule....
				if(isset($thankyouProductOverrides) && !empty($thankyouProductOverrides)){
			  		$redirectOverride = REDIRECT_OVERRIDE_FALSE;//define variable.....
			  		//Execute loop....
			  		foreach ($thankyouProductOverrides as $key => $value)
			  		{
			  			//check id is not empty....
			  			if(!empty($value->id))
			  			{
			  				$relatedProductsArray = get_override_related_products($value->id);//get the override related products.....
				  			$redirectOverride = override_redirect_checks(REDIRECT_CONDITION_CART_SPECIFIC_PRODUCTS,$relatedProductsArray,$order);//check product rule match with  order product or not
						}
						//if redirect condition is met then get the redirect link and call the function "redirectUrl" to process the redirection process along with contact information....
			  			if($redirectOverride == REDIRECT_OVERRIDE_TRUE){
							if(!empty($value->wc_override_redirect_url))
			  				{
			  					$redirectUrl = $value->wc_override_redirect_url;
			  					if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
						  			redirectUrl($redirectUrl,$contactPassInformation);
						  		}
			  				}
						}
					}
					//If no any product thankyou override is met....
			  		if($redirectOverride == REDIRECT_OVERRIDE_FALSE){
		  				//then check product category override is empty if empty then redirect on the basis of default override....
		  				if(empty($thankyouProductCategoryOverrides)){
							$redirectUrl = getDefaultOverrideUrl();//get the redirect link from default thankyou override.....
					  		if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"...
					  			redirectUrl($redirectUrl,$contactPassInformation);
					  		}
						}else{//if product thankyou override is not empty....
							$redirectOverrideCat = REDIRECT_OVERRIDE_FALSE;//define variable.....
							//Execute loop....
							foreach ($thankyouProductCategoryOverrides as $key => $value)
					  		{
					  			//check id is not empty....
					  			if(!empty($value->id))
					  			{
					  				$relatedCatArray = get_override_related_cat($value->id);//get the override related categories.....
					  				$redirectOverrideCat = override_redirect_checks(REDIRECT_CONDITION_CART_SPECIFIC_CATEGORIES,$relatedCatArray,$order);//check product category rule match with  order product or not
					  			}
					  			//if redirect condition is met then get the redirect link and call the function "redirectUrl" to process the redirection process along with contact information....
					  			if($redirectOverrideCat == REDIRECT_OVERRIDE_TRUE){
									if(!empty($value->wc_override_redirect_url))
					  				{
					  					$redirectUrl = $value->wc_override_redirect_url;
					  					if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
								  			redirectUrl($redirectUrl,$contactPassInformation);
								  		}
					  				}
								}
							}
							//If no any product category thankyou override is met....
					  		if($redirectOverrideCat == REDIRECT_OVERRIDE_FALSE){
				  				$redirectUrl = getDefaultOverrideUrl();//get the redirect link from default thankyou override.....
						  		if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
						  			redirectUrl($redirectUrl,$contactPassInformation);
						  		}
							}
						}
			  		}
			  	}
				//Then check the product category based thanks overrride exist or not if exist then proceed to match the rule....
			  	else if(isset($thankyouProductCategoryOverrides) && !empty($thankyouProductCategoryOverrides)){
			  		$redirectOverrideCat = REDIRECT_OVERRIDE_FALSE;//define variable.....
			  		//Execute loop....
			  		foreach ($thankyouProductCategoryOverrides as $key => $value)
			  		{
			  			//check id is not empty....
			  			if(!empty($value->id))
			  			{
			  				$relatedCatArray = get_override_related_cat($value->id);//get the override related categories.....
				  			$redirectOverrideCat = override_redirect_checks(REDIRECT_CONDITION_CART_SPECIFIC_CATEGORIES,$relatedCatArray,$order);//check product category rule match with  order product or not
			  			}
			  			//if redirect condition is met then get the redirect link and call the function "redirectUrl" to process the redirection process along with contact information....
			  			if($redirectOverrideCat == REDIRECT_OVERRIDE_TRUE){
							if(!empty($value->wc_override_redirect_url))
			  				{
			  					$redirectUrl = $value->wc_override_redirect_url;
			  					if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
						  			redirectUrl($redirectUrl,$contactPassInformation);
						  		}
			  				}
						}
			  		}
			  		//If no any product category thankyou override is met....
			  		if($redirectOverrideCat == REDIRECT_OVERRIDE_FALSE){
		  				$redirectUrl = getDefaultOverrideUrl();//get the redirect link from default thankyou override.....
				  		if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
				  			redirectUrl($redirectUrl,$contactPassInformation);
				  		}
					}
			  	}
			  	//In last check default thankyou override is exist or not if exist then proceed redirect with its link....
			  	else{
			  		$redirectUrl = getDefaultOverrideUrl();//get the redirect link from default thankyou override.....
			  		if(!empty($redirectUrl)){//if redirect url is not empty then call the function "redirectUrl"... 
			  			redirectUrl($redirectUrl,$contactPassInformation);
			  		}
			 	}
			}
		}
	}

	//This function is used to check redirect criteria is met or not.....
	function override_redirect_checks($condition,$condition_related_data,$order) {
		$redirectOverride = REDIRECT_OVERRIDE_FALSE;//define variable.....
		$items = $order->get_items();//get the list of order items...
		//check if condition is specific products then find the same item from array of items as defined in product thankyou override if match then return ...
		if ($condition == REDIRECT_CONDITION_CART_SPECIFIC_PRODUCTS)
		{
			//check products array is exist then proceed next to match product rule....
			if(isset($condition_related_data) && !empty($condition_related_data)){
				//Execute loop....
				foreach($items as $item => $values)
				{
					if(in_array($values['product_id'], $condition_related_data)) {//check if item is exist in products array.....
						$redirectOverride = REDIRECT_OVERRIDE_TRUE;
					}
				}	
			}else{//mark condition is not match....
				$redirectOverride = REDIRECT_OVERRIDE_FALSE;
			}
			
		}
		//check if condition is specific products category then find the same item is exist under category from array of category as defined in product category thankyou override if match then return.......
		else if ($condition == REDIRECT_CONDITION_CART_SPECIFIC_CATEGORIES)
		{
			//check products categories array is exist then proceed next to match product category rule....
			if(isset($condition_related_data) && !empty($condition_related_data)){
				//Execute loop....
				foreach($items as $item => $values)
				{
					$product_category = get_the_terms($values['product_id'], 'product_cat');//get the product category....
					//check product category array is not exist.....
					if(isset($product_category) && !empty($product_category)){
						//Execute loop....
						foreach($product_category as $categorydetails) {
							if(in_array($categorydetails->term_id, $condition_related_data)) {//check if item is exist in products category array.....
								$redirectOverride = REDIRECT_OVERRIDE_TRUE;
							}
						}
					}
				}	
			}else{//mark condition is not match....
				$redirectOverride = REDIRECT_OVERRIDE_FALSE;
			}
		}
		return $redirectOverride;//return variable.....
	}

	//get the contact and order basic details to send with custom thankyou page url....
	function getContactInformationFromOrder($woocommerce_order_data,$order){
	    $basicInformation = array();//define empty array...
	    $cartValueTotal = $order->get_total();//get the total order amount....
	    $currencySign = get_woocommerce_currency_symbol();//get currency symbol...
	    //check order billing data is not empty.....
	    if(!empty($woocommerce_order_data)){
	    	//check billing first name......
	    	if(isset($woocommerce_order_data['billing']['first_name']) && !empty($woocommerce_order_data['billing']['first_name'])){
				$basicInformation['FirstName'] = trim($woocommerce_order_data['billing']['first_name']);
			}
			//check billing last name......
			if(isset($woocommerce_order_data['billing']['last_name']) && !empty($woocommerce_order_data['billing']['last_name'])){
				$basicInformation['LastName'] = trim($woocommerce_order_data['billing']['last_name']);
			}
			//check billing address 1......
			if(isset($woocommerce_order_data['billing']['address_1']) && !empty($woocommerce_order_data['billing']['address_1'])){
				$basicInformation['StreetAddress1'] = trim($woocommerce_order_data['billing']['address_1']);
			}
			//check billing address 2......
			if(isset($woocommerce_order_data['billing']['address_2']) && !empty($woocommerce_order_data['billing']['address_2']))
			{
				$basicInformation['StreetAddress2'] = $woocommerce_order_data['billing']['address_2'];
			}
			//check billing phone number......
			if(isset($woocommerce_order_data['billing']['phone']) && !empty($woocommerce_order_data['billing']['phone'])){
				$basicInformation['Phone1'] = $woocommerce_order_data['billing']['phone'];
			}
			//check billing city......
			if(isset($woocommerce_order_data['billing']['city']) && !empty($woocommerce_order_data['billing']['city'])){
				$basicInformation['City'] = $woocommerce_order_data['billing']['city'];
			}
			//check billing state......
			if(isset($woocommerce_order_data['billing']['state']) && !empty($woocommerce_order_data['billing']['state'])){
				$states = WC()->countries->get_states($woocommerce_order_data['billing']['country']);
				$state = !empty($states[$woocommerce_order_data['billing']['state']]) ? $states[$woocommerce_order_data['billing']['state']] : '';
				$basicInformation['State'] = $state;
			}
			//check billing country......
			if(isset($woocommerce_order_data['billing']['country']) && !empty($woocommerce_order_data['billing']['country'])){
				$countryName = getCountryName($woocommerce_order_data['billing']['country']);
				$basicInformation['Country'] = $countryName;
			}
			//check billing zipcode......
			if(isset($woocommerce_order_data['billing']['postcode']) && !empty($woocommerce_order_data['billing']['postcode'])){
				$basicInformation['PostalCode'] = $woocommerce_order_data['billing']['postcode'];
			}
			//check order number......
			if(isset($woocommerce_order_data['number']) && !empty($woocommerce_order_data['number'])){
				$basicInformation['OrderNumber'] = $woocommerce_order_data['number'];
			}
			//get the order amount......
			if(isset($cartValueTotal) && !empty($cartValueTotal)){
				$basicInformation['OrderAmount'] = $currencySign.$cartValueTotal;	
			}
			//get the payment method......
			if(isset($woocommerce_order_data['payment_method_title']) && !empty($woocommerce_order_data['payment_method_title'])){
				$basicInformation['PaymentMethod'] = $woocommerce_order_data['payment_method_title'];
			}
		}
	   	return $basicInformation;//return array of contact information.....
	}

	//get the default thankyou override....
	function getDefaultOverrideUrl(){
		$redirectUrl ='';//define variable.....
		//check option "default_thankyou_details" exist in wp_options table if yes then get redirect url on the basis of post,page custom url.....
		$default_thankyou_details = get_option('default_thankyou_details');
		//check if isset or not empty default thankyou details.....
		if (isset($default_thankyou_details) && !empty($default_thankyou_details)) {
			//first get the type....
			if(!empty($default_thankyou_details['redirectType'])){
				$redirectType = $default_thankyou_details['redirectType'];
			}
			//check redirect value is not empty....
			if(!empty($default_thankyou_details['redirectValue'])){
				if($redirectType == DEFAULT_WORDPRESS_POST){//if redirect url type is wordpress post then get the permalink on the basis of post id.......
					$redirectUrl = get_permalink( $default_thankyou_details['redirectValue'] );
				}else if ($redirectType == DEFAULT_WORDPRESS_PAGE) {//if redirect url type is wordpress page then get the permalink on the basis of post id.......
					$redirectUrl = get_permalink( $default_thankyou_details['redirectValue'] );
				}elseif ($redirectType == DEFAULT_WORDPRESS_CUSTOM_URL) {//if redirect url type is custom url.....
					$redirectUrl = $default_thankyou_details['redirectValue'];
				}
			}
		}
		return $redirectUrl;
	}

	//This function is used to process the redirection process along with contact information...
	function redirectUrl($redirectUrl,$contactPassInformation=''){
        //check if contact information is not empty then merge to query string.......
        if(!empty($contactPassInformation)){
            if(strpos($redirectUrl, "?") == false){
            	$redirectUrl .= "?" . http_build_query($contactPassInformation);
            }
            else{
                $redirectUrl .= "&" . http_build_query($contactPassInformation);    
            }   
        }
        //call the function "wp_redirect" to redirect on url.....
        wp_redirect($redirectUrl);
        exit(); 
    }

?>